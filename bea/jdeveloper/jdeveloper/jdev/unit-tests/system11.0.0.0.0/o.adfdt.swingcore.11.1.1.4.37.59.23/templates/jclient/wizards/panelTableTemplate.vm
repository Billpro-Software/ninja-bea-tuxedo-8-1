package $packageName;


import java.awt.*;
import java.awt.event.*;

import java.util.ArrayList;

import javax.swing.*;
import javax.swing.table.*;
import javax.swing.text.*;

import oracle.adf.model.*;
import oracle.adf.model.BindingContext;
import oracle.adf.model.binding.*;

import oracle.jbo.uicli.binding.*;
import oracle.jbo.uicli.controls.*;
import oracle.jbo.uicli.jui.*;

import oracle.jdeveloper.layout.*;

public class $className extends JPanel implements JUPanel {
    //PageDefinition File	
    private JUPanelBinding panelBinding = new JUPanelBinding("$pageDefFileId");
    private JPanel dataPanel = new JPanel();
    private BorderLayout borderLayout = new BorderLayout();
    private GridLayout gridLayout = new GridLayout();
    #foreach($objects in $templateObjects)
		private $objects.ControlType $objects.VariableName = new $objects.ControlType ();
		#if ($objects.RequiresScrollPane)
			#if ($objects.ScrollVariableName)
			    private JScrollPane $objects.ScrollVariableName = new JScrollPane();
			#else
				private JScrollPane ${objects.VariableName}ScrollPane = new JScrollPane();
				#set ($objects.ScrollVariableName = "${objects.VariableName}ScrollPane")
			#end
		#end
	 #end
	 #if($navBar)
		 private JUNavigationBar navBar = new JUNavigationBar();
	 #end
    /**The default constructor for panel
     */
    public $className() {
    }

    /**the JbInit method
     */
    public void jbInit() throws Exception {
        dataPanel.setLayout(gridLayout);
        dataPanel.setMinimumSize(new Dimension(100,100));
        this.setLayout(borderLayout);
		#foreach($objects in $templateObjects)
			#if ($objects.RequiresScrollPane)
				dataPanel.add($objects.ScrollVariableName);
				$!{objects.ScrollVariableName}.getViewport().add($objects.VariableName, null);
			#else
				dataPanel.add($objects.VariableName);
			#end
		#end
		#if($navBar)
			navBar.setModel(JUNavigationBar.createViewBinding(panelBinding, navBar, "$viewBindingName", null, "$viewBindingIteratorName"));
  		    add(navBar, BorderLayout.NORTH);
		#end
		add(dataPanel, BorderLayout.CENTER);
		//BindingCodes
	    #foreach($objects in $templateObjects)
			$objects.BindingString;
		#end
    }


    /**ADF Swing Panel implementation
     */
    public JUPanelBinding getPanelBinding() {
        return panelBinding;
    }

    public void bindNestedContainer(JUPanelBinding ctr) {
        if (panelBinding.getPanel() == null) {
            ctr.setPanel(this);
            panelBinding.release(DCDataControl.REL_VIEW_REFS);
            panelBinding = ctr;
            registerProjectGlobalVariables(panelBinding.getBindingContext());
            try {
                jbInit();
            } catch (Exception ex) {
                ex.printStackTrace();
                ctr.reportException(ex);
            }
        }
    }

    private void registerProjectGlobalVariables(BindingContext bindCtx) {
        JUUtil.registerNavigationBarInterface(panelBinding, bindCtx);
    }

    private void unRegisterProjectGlobalVariables(BindingContext bindCtx) {
        JUUtil.unRegisterNavigationBarInterface(panelBinding, bindCtx);
    }

    public void setBindingContext(BindingContext bindCtx) {
        if (panelBinding.getPanel() == null) {
            panelBinding = panelBinding.setup(bindCtx, this);
            registerProjectGlobalVariables(bindCtx);
            panelBinding.refreshControl();
            try {
                jbInit();
                panelBinding.refreshControl();
            } catch (Exception ex) {
                panelBinding.reportException(ex);
            }
        }
    }

	#if($generateMain)
    public static void main(String [] args) {
     #if($supportsJGoodiesLnF)
        try {
            UIManager.setLookAndFeel("com.jgoodies.looks.plastic.PlasticXPLookAndFeel");
        } catch (ClassNotFoundException cnfe) {
            try {
                UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
            } catch (Exception exemp) {
                exemp.printStackTrace();
            }
        } catch (Exception exemp) {
            exemp.printStackTrace();
        }
      #else
        try {
                UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (Exception exemp) {
                exemp.printStackTrace();
        }
      #end

        $className panel = new $className();
        panel.setBindingContext(JUTestFrame.startTestFrame("$cpxFileQualifiedName", "null", panel, panel.getPanelBinding(), new Dimension(400,300)));
        panel.revalidate();
    }
    #end

}
